# Generated by Django 5.2.3 on 2025-06-19 18:18

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='HealthMetric',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('metric_type', models.CharField(blank=True, choices=[('blood_pressure', '血压'), ('blood_glucose', '血糖'), ('heart_rate', '心率'), ('weight', '体重'), ('uric_acid', '尿酸'), ('lipids', '血脂')], max_length=50, null=True, verbose_name='指标类型')),
                ('systolic', models.IntegerField(blank=True, null=True, verbose_name='收缩压(mmHg)')),
                ('diastolic', models.IntegerField(blank=True, null=True, verbose_name='舒张压(mmHg)')),
                ('heart_rate', models.IntegerField(blank=True, null=True, verbose_name='心率(bpm)')),
                ('blood_glucose', models.FloatField(blank=True, null=True, verbose_name='血糖(mmol/L)')),
                ('uric_acid', models.FloatField(blank=True, null=True, verbose_name='尿酸(μmol/L)')),
                ('weight', models.FloatField(blank=True, null=True, verbose_name='体重(kg)')),
                ('lipids_total', models.FloatField(blank=True, null=True, verbose_name='总胆固醇')),
                ('hdl', models.FloatField(blank=True, null=True, verbose_name='高密度脂蛋白')),
                ('ldl', models.FloatField(blank=True, null=True, verbose_name='低密度脂蛋白')),
                ('triglyceride', models.FloatField(blank=True, null=True, verbose_name='甘油三酯')),
                ('measured_at', models.DateTimeField(verbose_name='测量时间')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='更新时间')),
                ('note', models.TextField(blank=True, null=True, verbose_name='备注')),
                ('last_modified_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='modified_metrics', to=settings.AUTH_USER_MODEL, verbose_name='最后修改者')),
                ('measured_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='measured_metrics', to=settings.AUTH_USER_MODEL, verbose_name='录入者')),
                ('patient', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='health_metrics', to=settings.AUTH_USER_MODEL, verbose_name='患者')),
            ],
            options={
                'verbose_name': '健康指标记录',
                'verbose_name_plural': '健康指标记录',
                'db_table': 'health_metric',
                'ordering': ['-measured_at'],
            },
        ),
        migrations.CreateModel(
            name='DoctorAdvice',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('content', models.TextField(verbose_name='建议内容')),
                ('advice_time', models.DateTimeField(auto_now_add=True, verbose_name='建议时间')),
                ('advice_type', models.CharField(choices=[('general', '一般建议'), ('medication', '用药建议'), ('lifestyle', '生活方式'), ('diet', '饮食建议'), ('exercise', '运动建议'), ('urgent', '紧急建议')], default='general', max_length=20, verbose_name='建议类型')),
                ('priority', models.CharField(choices=[('low', '低'), ('medium', '中'), ('high', '高'), ('urgent', '紧急')], default='medium', max_length=10, verbose_name='优先级')),
                ('is_read', models.BooleanField(default=False, verbose_name='已读')),
                ('read_at', models.DateTimeField(blank=True, null=True, verbose_name='阅读时间')),
                ('doctor', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='given_advice', to=settings.AUTH_USER_MODEL, verbose_name='医生')),
                ('patient', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='received_advice', to=settings.AUTH_USER_MODEL, verbose_name='患者')),
                ('related_metric', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='related_advice', to='health.healthmetric', verbose_name='相关异常指标')),
            ],
            options={
                'verbose_name': '医生建议',
                'verbose_name_plural': '医生建议',
                'db_table': 'doctor_advice',
                'ordering': ['-advice_time'],
            },
        ),
        migrations.CreateModel(
            name='Alert',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('alert_type', models.CharField(choices=[('threshold_exceeded', '阈值超标'), ('missed_medication', '漏服药物'), ('abnormal_trend', '异常趋势'), ('system_notification', '系统通知')], max_length=30, verbose_name='告警类型')),
                ('title', models.CharField(max_length=200, verbose_name='告警标题')),
                ('message', models.TextField(verbose_name='告警内容')),
                ('status', models.CharField(choices=[('pending', '待处理'), ('handled', '已处理'), ('dismissed', '已忽略')], default='pending', max_length=20, verbose_name='状态')),
                ('priority', models.CharField(choices=[('low', '低'), ('medium', '中'), ('high', '高'), ('critical', '危急')], default='medium', max_length=10, verbose_name='优先级')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='创建时间')),
                ('handled_at', models.DateTimeField(blank=True, null=True, verbose_name='处理时间')),
                ('action_taken', models.TextField(blank=True, null=True, verbose_name='处理措施')),
                ('notes', models.TextField(blank=True, null=True, verbose_name='处理备注')),
                ('assigned_doctor', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='assigned_alerts', to=settings.AUTH_USER_MODEL, verbose_name='分配医生')),
                ('handled_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='handled_alerts', to=settings.AUTH_USER_MODEL, verbose_name='处理人')),
                ('patient', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='alerts', to=settings.AUTH_USER_MODEL, verbose_name='患者')),
                ('related_metric', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='alerts', to='health.healthmetric', verbose_name='相关指标')),
            ],
            options={
                'verbose_name': '健康告警',
                'verbose_name_plural': '健康告警',
                'db_table': 'alert',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='HealthRecord',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('summary', models.TextField(blank=True, null=True, verbose_name='健康概况汇总')),
                ('diagnosis', models.TextField(blank=True, null=True, verbose_name='医生诊断信息')),
                ('allergies', models.TextField(blank=True, null=True, verbose_name='过敏史')),
                ('history', models.TextField(blank=True, null=True, verbose_name='既往病史')),
                ('blood_type', models.CharField(blank=True, max_length=10, null=True, verbose_name='血型')),
                ('smoking_status', models.CharField(blank=True, max_length=20, null=True, verbose_name='吸烟状况')),
                ('family_history', models.TextField(blank=True, null=True, verbose_name='家族史')),
                ('last_updated', models.DateTimeField(auto_now=True, verbose_name='最后更新时间')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='创建时间')),
                ('patient', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='health_record', to=settings.AUTH_USER_MODEL, verbose_name='患者')),
            ],
            options={
                'verbose_name': '健康档案',
                'verbose_name_plural': '健康档案',
                'db_table': 'health_record',
            },
        ),
        migrations.CreateModel(
            name='ThresholdSetting',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('metric_type', models.CharField(choices=[('blood_pressure', '血压'), ('blood_glucose', '血糖'), ('heart_rate', '心率'), ('weight', '体重'), ('uric_acid', '尿酸'), ('lipids', '血脂')], max_length=50, verbose_name='指标类型')),
                ('min_value', models.FloatField(blank=True, null=True, verbose_name='最低警戒值')),
                ('max_value', models.FloatField(blank=True, null=True, verbose_name='最高警戒值')),
                ('gender', models.CharField(blank=True, choices=[('male', '男'), ('female', '女')], max_length=10, null=True, verbose_name='性别')),
                ('age_range', models.CharField(blank=True, max_length=20, null=True, verbose_name='年龄范围')),
                ('disease_type', models.CharField(blank=True, max_length=100, null=True, verbose_name='疾病类型')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='创建时间')),
                ('is_active', models.BooleanField(default=True, verbose_name='是否启用')),
                ('name', models.CharField(max_length=100, verbose_name='阈值名称')),
                ('description', models.TextField(blank=True, null=True, verbose_name='描述')),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='配置者')),
            ],
            options={
                'verbose_name': '预警阈值设定',
                'verbose_name_plural': '预警阈值设定',
                'db_table': 'threshold_setting',
            },
        ),
        migrations.CreateModel(
            name='DoctorPatientRelation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='建立时间')),
                ('is_primary', models.BooleanField(default=False, verbose_name='主治医生')),
                ('status', models.CharField(choices=[('active', '活跃'), ('inactive', '不活跃'), ('transferred', '已转诊')], default='active', max_length=20, verbose_name='状态')),
                ('notes', models.TextField(blank=True, null=True, verbose_name='备注')),
                ('doctor', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='patients', to=settings.AUTH_USER_MODEL, verbose_name='医生')),
                ('patient', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='doctors', to=settings.AUTH_USER_MODEL, verbose_name='患者')),
            ],
            options={
                'verbose_name': '医患关系',
                'verbose_name_plural': '医患关系',
                'db_table': 'doctor_patient_relation',
                'indexes': [models.Index(fields=['doctor', 'status'], name='doctor_pati_doctor__a2f2b4_idx'), models.Index(fields=['patient', 'status'], name='doctor_pati_patient_e3fb75_idx')],
                'unique_together': {('doctor', 'patient')},
            },
        ),
        migrations.AddIndex(
            model_name='healthmetric',
            index=models.Index(fields=['patient', 'measured_at'], name='health_metr_patient_ad572c_idx'),
        ),
        migrations.AddIndex(
            model_name='healthmetric',
            index=models.Index(fields=['metric_type', 'measured_at'], name='health_metr_metric__48b7f8_idx'),
        ),
        migrations.AddIndex(
            model_name='healthmetric',
            index=models.Index(fields=['measured_at'], name='health_metr_measure_6c4137_idx'),
        ),
        migrations.AddIndex(
            model_name='doctoradvice',
            index=models.Index(fields=['patient', 'advice_time'], name='doctor_advi_patient_0ca688_idx'),
        ),
        migrations.AddIndex(
            model_name='doctoradvice',
            index=models.Index(fields=['doctor', 'advice_time'], name='doctor_advi_doctor__368119_idx'),
        ),
        migrations.AddIndex(
            model_name='doctoradvice',
            index=models.Index(fields=['priority', 'advice_time'], name='doctor_advi_priorit_a60f6b_idx'),
        ),
        migrations.AddIndex(
            model_name='alert',
            index=models.Index(fields=['patient', 'status'], name='alert_patient_993696_idx'),
        ),
        migrations.AddIndex(
            model_name='alert',
            index=models.Index(fields=['assigned_doctor', 'status'], name='alert_assigne_8865ba_idx'),
        ),
        migrations.AddIndex(
            model_name='alert',
            index=models.Index(fields=['priority', 'created_at'], name='alert_priorit_06e9e0_idx'),
        ),
        migrations.AddIndex(
            model_name='thresholdsetting',
            index=models.Index(fields=['metric_type', 'is_active'], name='threshold_s_metric__e7e904_idx'),
        ),
        migrations.AddIndex(
            model_name='thresholdsetting',
            index=models.Index(fields=['created_by'], name='threshold_s_created_f0755d_idx'),
        ),
    ]
