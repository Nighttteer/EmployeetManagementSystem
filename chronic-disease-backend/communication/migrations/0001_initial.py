# Generated by Django 5.2.3 on 2025-06-19 18:18

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Conversation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(blank=True, max_length=200, null=True, verbose_name='会话标题')),
                ('description', models.TextField(blank=True, null=True, verbose_name='会话描述')),
                ('status', models.CharField(choices=[('active', '活跃'), ('archived', '已归档'), ('closed', '已关闭')], default='active', max_length=20, verbose_name='状态')),
                ('conversation_type', models.CharField(choices=[('consultation', '咨询'), ('follow_up', '随访'), ('emergency', '紧急'), ('general', '一般')], default='general', max_length=20, verbose_name='会话类型')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='创建时间')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='最后更新')),
                ('last_message_at', models.DateTimeField(blank=True, null=True, verbose_name='最后消息时间')),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='created_conversations', to=settings.AUTH_USER_MODEL, verbose_name='创建者')),
                ('participants', models.ManyToManyField(related_name='conversations', to=settings.AUTH_USER_MODEL, verbose_name='参与者')),
            ],
            options={
                'verbose_name': '会话',
                'verbose_name_plural': '会话',
                'db_table': 'conversation',
                'ordering': ['-last_message_at', '-updated_at'],
            },
        ),
        migrations.CreateModel(
            name='Message',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('message_type', models.CharField(choices=[('text', '文本'), ('image', '图片')], default='text', max_length=20, verbose_name='消息类型')),
                ('content', models.TextField(verbose_name='消息内容')),
                ('attachment', models.FileField(blank=True, null=True, upload_to='message_attachments/', verbose_name='附件')),
                ('attachment_type', models.CharField(blank=True, max_length=50, null=True, verbose_name='附件类型')),
                ('is_read', models.BooleanField(default=False, verbose_name='已读')),
                ('read_at', models.DateTimeField(blank=True, null=True, verbose_name='阅读时间')),
                ('sent_at', models.DateTimeField(auto_now_add=True, verbose_name='发送时间')),
                ('priority', models.CharField(choices=[('low', '低'), ('normal', '正常'), ('high', '高'), ('urgent', '紧急')], default='normal', max_length=10, verbose_name='优先级')),
                ('tags', models.CharField(blank=True, max_length=200, null=True, verbose_name='标签')),
                ('conversation', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='messages', to='communication.conversation', verbose_name='会话')),
                ('recipient', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='received_messages', to=settings.AUTH_USER_MODEL, verbose_name='接收者')),
                ('reply_to', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='replies', to='communication.message', verbose_name='回复消息')),
                ('sender', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='sent_messages', to=settings.AUTH_USER_MODEL, verbose_name='发送者')),
            ],
            options={
                'verbose_name': '消息',
                'verbose_name_plural': '消息',
                'db_table': 'message',
                'ordering': ['-sent_at'],
            },
        ),
        migrations.CreateModel(
            name='MessageTemplate',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, verbose_name='模板名称')),
                ('content', models.TextField(verbose_name='模板内容')),
                ('category', models.CharField(choices=[('greeting', '问候'), ('reminder', '提醒'), ('instruction', '指导'), ('follow_up', '随访'), ('emergency', '紧急'), ('general', '通用')], default='general', max_length=20, verbose_name='分类')),
                ('applicable_roles', models.CharField(help_text='用逗号分隔，如: doctor,patient', max_length=50, verbose_name='适用角色')),
                ('variables', models.JSONField(blank=True, help_text='JSON格式的变量定义', null=True, verbose_name='模板变量')),
                ('is_active', models.BooleanField(default=True, verbose_name='启用')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='创建时间')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='更新时间')),
                ('usage_count', models.PositiveIntegerField(default=0, verbose_name='使用次数')),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='创建者')),
            ],
            options={
                'verbose_name': '消息模板',
                'verbose_name_plural': '消息模板',
                'db_table': 'message_template',
            },
        ),
        migrations.CreateModel(
            name='NotificationLog',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200, verbose_name='通知标题')),
                ('content', models.TextField(verbose_name='通知内容')),
                ('notification_type', models.CharField(choices=[('medication_reminder', '用药提醒'), ('health_alert', '健康告警'), ('appointment_reminder', '预约提醒'), ('doctor_advice', '医生建议'), ('system_update', '系统更新'), ('other', '其他')], max_length=30, verbose_name='通知类型')),
                ('channel', models.CharField(choices=[('push', '推送通知'), ('sms', '短信'), ('email', '邮件'), ('in_app', '应用内通知')], default='push', max_length=20, verbose_name='发送渠道')),
                ('status', models.CharField(choices=[('pending', '待发送'), ('sent', '已发送'), ('delivered', '已送达'), ('failed', '发送失败'), ('read', '已读')], default='pending', max_length=20, verbose_name='状态')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='创建时间')),
                ('sent_at', models.DateTimeField(blank=True, null=True, verbose_name='发送时间')),
                ('delivered_at', models.DateTimeField(blank=True, null=True, verbose_name='送达时间')),
                ('read_at', models.DateTimeField(blank=True, null=True, verbose_name='阅读时间')),
                ('related_object_type', models.CharField(blank=True, max_length=50, null=True, verbose_name='关联对象类型')),
                ('related_object_id', models.PositiveIntegerField(blank=True, null=True, verbose_name='关联对象ID')),
                ('error_message', models.TextField(blank=True, null=True, verbose_name='错误信息')),
                ('recipient', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='notifications', to=settings.AUTH_USER_MODEL, verbose_name='接收者')),
            ],
            options={
                'verbose_name': '通知日志',
                'verbose_name_plural': '通知日志',
                'db_table': 'notification_log',
                'ordering': ['-created_at'],
            },
        ),
        migrations.AddIndex(
            model_name='conversation',
            index=models.Index(fields=['status', 'last_message_at'], name='conversatio_status_3ec863_idx'),
        ),
        migrations.AddIndex(
            model_name='conversation',
            index=models.Index(fields=['created_by', 'status'], name='conversatio_created_7ea489_idx'),
        ),
        migrations.AddIndex(
            model_name='message',
            index=models.Index(fields=['sender', 'recipient', 'sent_at'], name='message_sender__bae172_idx'),
        ),
        migrations.AddIndex(
            model_name='message',
            index=models.Index(fields=['recipient', 'is_read'], name='message_recipie_2031b4_idx'),
        ),
        migrations.AddIndex(
            model_name='message',
            index=models.Index(fields=['sent_at'], name='message_sent_at_bdb571_idx'),
        ),
        migrations.AddIndex(
            model_name='message',
            index=models.Index(fields=['priority', 'sent_at'], name='message_priorit_799bb3_idx'),
        ),
        migrations.AddIndex(
            model_name='messagetemplate',
            index=models.Index(fields=['category', 'is_active'], name='message_tem_categor_970542_idx'),
        ),
        migrations.AddIndex(
            model_name='messagetemplate',
            index=models.Index(fields=['created_by'], name='message_tem_created_70d52c_idx'),
        ),
        migrations.AddIndex(
            model_name='notificationlog',
            index=models.Index(fields=['recipient', 'status'], name='notificatio_recipie_5074a9_idx'),
        ),
        migrations.AddIndex(
            model_name='notificationlog',
            index=models.Index(fields=['notification_type', 'created_at'], name='notificatio_notific_995fda_idx'),
        ),
        migrations.AddIndex(
            model_name='notificationlog',
            index=models.Index(fields=['status', 'created_at'], name='notificatio_status_aa9c15_idx'),
        ),
    ]
